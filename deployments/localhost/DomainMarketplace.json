{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "buyDomain",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "domains",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "forSale",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "getDomain",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "forSale",
              "type": "bool"
            }
          ],
          "internalType": "struct DomainMarketplace.Domain",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listDomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcda9e0f42dcb0724604aeec18e76a2f856cf57790a2b5776cd71ee0605833564",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "516496",
    "logsBloom": "0x
    "blockHash": "0x5fbab01bccafd4d5aeb43833af289eee27757fb6f851a162de5de4dd912a62a2",
    "transactionHash": "0xcda9e0f42dcb0724604aeec18e76a2f856cf57790a2b5776cd71ee0605833564",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "516496",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "54d1b59b719a287acfd06740b3551e21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"buyDomain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"domains\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getDomain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"internalType\":\"struct DomainMarketplace.Domain\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DomainMarketplace.sol\":\"DomainMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DomainMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract DomainMarketplace {\\n    struct Domain {\\n        string name;\\n        uint256 price;\\n        address owner;\\n        bool forSale;\\n    }\\n\\n    mapping(string => Domain) public domains;\\n\\n    function listDomain(string memory name, uint256 price) public {\\n        require(price > 0, \\\"Price must be greater than zero\\\");\\n        domains[name] = Domain(name, price, msg.sender, true);\\n    }\\n\\n    function buyDomain(string memory name) public payable {\\n        Domain storage domain = domains[name];\\n        require(domain.forSale, \\\"Domain not for sale\\\");\\n        require(msg.value >= domain.price, \\\"Insufficient payment\\\");\\n\\n        address payable seller = payable(domain.owner);\\n        seller.transfer(msg.value);\\n\\n        domain.owner = msg.sender;\\n        domain.forSale = false;\\n    }\\n\\n    function getDomain(string memory name) public view returns (Domain memory) {\\n        return domains[name];\\n    }\\n}\\n\",\"keccak256\":\"0x6c7fb98d5bc6fa4688f2a8d200ef3e75664a44099dbb3672de2bd53d80247be2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506108618061001f6000396000f3fe60806040526004361061003f5760003560e01c80631c3b028e1461004457806326449235146100595780635def398714610092578063ecdd04da146100b2575b600080fd5b61005761005236600461056b565b6100df565b005b34801561006557600080fd5b5061007961007436600461056b565b610200565b60405161008994939291906105f8565b60405180910390f35b34801561009e57600080fd5b506100576100ad366004610632565b6102ca565b3480156100be57600080fd5b506100d26100cd36600461056b565b6103b1565b6040516100899190610677565b600080826040516100f091906106c7565b908152604051908190036020019020600281015490915060ff600160a01b909104166101595760405162461bcd60e51b8152602060048201526013602482015272446f6d61696e206e6f7420666f722073616c6560681b60448201526064015b60405180910390fd5b80600101543410156101a45760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610150565b60028101546040516001600160a01b039091169081903480156108fc02916000818181858888f193505050501580156101e1573d6000803e3d6000fd5b505060020180546001600160a81b0319163360ff60a01b191617905550565b8051602081830181018051600082529282019190930120915280548190610226906106e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610252906106e3565b801561029f5780601f106102745761010080835404028352916020019161029f565b820191906000526020600020905b81548152906001019060200180831161028257829003601f168201915b5050505060018301546002909301549192916001600160a01b0381169150600160a01b900460ff1684565b6000811161031a5760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f006044820152606401610150565b6040805160808101825283815260208101839052338183015260016060820152905160009061034a9085906106c7565b90815260405190819003602001902081518190610367908261076c565b50602082015160018201556040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790555050565b6040805160808101825260608082526000602083018190529282018390528101919091526000826040516103e591906106c7565b908152602001604051809103902060405180608001604052908160008201805461040e906106e3565b80601f016020809104026020016040519081016040528092919081815260200182805461043a906106e3565b80156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b5050509183525050600182015460208201526002909101546001600160a01b0381166040830152600160a01b900460ff16151560609091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104ed57600080fd5b813567ffffffffffffffff811115610507576105076104c6565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610536576105366104c6565b60405281815283820160200185101561054e57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561057d57600080fd5b813567ffffffffffffffff81111561059457600080fd5b6105a0848285016104dc565b949350505050565b60005b838110156105c35781810151838201526020016105ab565b50506000910152565b600081518084526105e48160208601602086016105a8565b601f01601f19169290920160200192915050565b60808152600061060b60808301876105cc565b6020830195909552506001600160a01b039290921660408301521515606090910152919050565b6000806040838503121561064557600080fd5b823567ffffffffffffffff81111561065c57600080fd5b610668858286016104dc565b95602094909401359450505050565b60208152600082516080602084015261069360a08401826105cc565b90506020840151604084015260018060a01b0360408501511660608401526060840151151560808401528091505092915050565b600082516106d98184602087016105a8565b9190910192915050565b600181811c908216806106f757607f821691505b60208210810361071757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561076757806000526020600020601f840160051c810160208510156107445750805b601f840160051c820191505b818110156107645760008155600101610750565b50505b505050565b815167ffffffffffffffff811115610786576107866104c6565b61079a8161079484546106e3565b8461071d565b6020601f8211600181146107ce57600083156107b65750848201515b600019600385901b1c1916600184901b178455610764565b600084815260208120601f198516915b828110156107fe57878501518255602094850194600190920191016107de565b508482101561081c5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea26469706673582212206de718bc92bc04cdbbf5a25cdcc037b3b996a388efc30d2e9e5ad33650ea4a5e64736f6c634300081c0033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80631c3b028e1461004457806326449235146100595780635def398714610092578063ecdd04da146100b2575b600080fd5b61005761005236600461056b565b6100df565b005b34801561006557600080fd5b5061007961007436600461056b565b610200565b60405161008994939291906105f8565b60405180910390f35b34801561009e57600080fd5b506100576100ad366004610632565b6102ca565b3480156100be57600080fd5b506100d26100cd36600461056b565b6103b1565b6040516100899190610677565b600080826040516100f091906106c7565b908152604051908190036020019020600281015490915060ff600160a01b909104166101595760405162461bcd60e51b8152602060048201526013602482015272446f6d61696e206e6f7420666f722073616c6560681b60448201526064015b60405180910390fd5b80600101543410156101a45760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610150565b60028101546040516001600160a01b039091169081903480156108fc02916000818181858888f193505050501580156101e1573d6000803e3d6000fd5b505060020180546001600160a81b0319163360ff60a01b191617905550565b8051602081830181018051600082529282019190930120915280548190610226906106e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610252906106e3565b801561029f5780601f106102745761010080835404028352916020019161029f565b820191906000526020600020905b81548152906001019060200180831161028257829003601f168201915b5050505060018301546002909301549192916001600160a01b0381169150600160a01b900460ff1684565b6000811161031a5760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f006044820152606401610150565b6040805160808101825283815260208101839052338183015260016060820152905160009061034a9085906106c7565b90815260405190819003602001902081518190610367908261076c565b50602082015160018201556040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790555050565b6040805160808101825260608082526000602083018190529282018390528101919091526000826040516103e591906106c7565b908152602001604051809103902060405180608001604052908160008201805461040e906106e3565b80601f016020809104026020016040519081016040528092919081815260200182805461043a906106e3565b80156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b5050509183525050600182015460208201526002909101546001600160a01b0381166040830152600160a01b900460ff16151560609091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104ed57600080fd5b813567ffffffffffffffff811115610507576105076104c6565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610536576105366104c6565b60405281815283820160200185101561054e57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561057d57600080fd5b813567ffffffffffffffff81111561059457600080fd5b6105a0848285016104dc565b949350505050565b60005b838110156105c35781810151838201526020016105ab565b50506000910152565b600081518084526105e48160208601602086016105a8565b601f01601f19169290920160200192915050565b60808152600061060b60808301876105cc565b6020830195909552506001600160a01b039290921660408301521515606090910152919050565b6000806040838503121561064557600080fd5b823567ffffffffffffffff81111561065c57600080fd5b610668858286016104dc565b95602094909401359450505050565b60208152600082516080602084015261069360a08401826105cc565b90506020840151604084015260018060a01b0360408501511660608401526060840151151560808401528091505092915050565b600082516106d98184602087016105a8565b9190910192915050565b600181811c908216806106f757607f821691505b60208210810361071757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561076757806000526020600020601f840160051c810160208510156107445750805b601f840160051c820191505b818110156107645760008155600101610750565b50505b505050565b815167ffffffffffffffff811115610786576107866104c6565b61079a8161079484546106e3565b8461071d565b6020601f8211600181146107ce57600083156107b65750848201515b600019600385901b1c1916600184901b178455610764565b600084815260208120601f198516915b828110156107fe57878501518255602094850194600190920191016107de565b508482101561081c5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea26469706673582212206de718bc92bc04cdbbf5a25cdcc037b3b996a388efc30d2e9e5ad33650ea4a5e64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/DomainMarketplace.sol:DomainMarketplace",
        "label": "domains",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Domain)10_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Domain)10_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct DomainMarketplace.Domain)",
        "numberOfBytes": "32",
        "value": "t_struct(Domain)10_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Domain)10_storage": {
        "encoding": "inplace",
        "label": "struct DomainMarketplace.Domain",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/DomainMarketplace.sol:DomainMarketplace",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/DomainMarketplace.sol:DomainMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/DomainMarketplace.sol:DomainMarketplace",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 9,
            "contract": "contracts/DomainMarketplace.sol:DomainMarketplace",
            "label": "forSale",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}